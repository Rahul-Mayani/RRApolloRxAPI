{"version":"2.18.3","commands":{"client:check":{"id":"client:check","description":"Check a client project against a pushed service","pluginName":"apollo","pluginType":"core","aliases":[],"flags":{"config":{"name":"config","type":"option","char":"c","description":"Path to your Apollo config file"},"header":{"name":"header","type":"option","description":"Additional header to send to server for introspectionQuery. May be used multiple times to add multiple headers. NOTE: The `--endpoint` flag is REQUIRED if using the `--header` flag."},"endpoint":{"name":"endpoint","type":"option","description":"The url of your service"},"key":{"name":"key","type":"option","description":"The API key for the Apollo Engine service"},"engine":{"name":"engine","type":"option","description":"Reporting URL for a custom Apollo Engine deployment","hidden":true},"frontend":{"name":"frontend","type":"option","description":"URL for a custom Apollo Engine frontend","hidden":true},"clientReferenceId":{"name":"clientReferenceId","type":"option","description":"Reference id for the client which will match ids from client traces, will use clientName if not provided"},"clientName":{"name":"clientName","type":"option","description":"Name of the client that the queries will be attached to"},"clientVersion":{"name":"clientVersion","type":"option","description":"The version of the client that the queries will be attached to"},"tag":{"name":"tag","type":"option","char":"t","description":"The published service tag for this client"},"queries":{"name":"queries","type":"option","description":"Deprecated in favor of the includes flag"},"includes":{"name":"includes","type":"option","description":"Glob of files to search for GraphQL operations. This should be used to find queries *and* any client schema extensions"},"excludes":{"name":"excludes","type":"option","description":"Glob of files to exclude for GraphQL operations. Caveat: this doesn't currently work in watch mode"},"tagName":{"name":"tagName","type":"option","description":"Name of the template literal tag used to identify template literals containing GraphQL queries in Javascript/Typescript code"}},"args":[]},"client:codegen":{"id":"client:codegen","description":"Generate static types for GraphQL queries. Can use the published schema in Apollo Engine or a downloaded schema.","pluginName":"apollo","pluginType":"core","aliases":["codegen:generate"],"flags":{"config":{"name":"config","type":"option","char":"c","description":"Path to your Apollo config file"},"header":{"name":"header","type":"option","description":"Additional header to send to server for introspectionQuery. May be used multiple times to add multiple headers. NOTE: The `--endpoint` flag is REQUIRED if using the `--header` flag."},"endpoint":{"name":"endpoint","type":"option","description":"The url of your service"},"key":{"name":"key","type":"option","description":"The API key for the Apollo Engine service"},"engine":{"name":"engine","type":"option","description":"Reporting URL for a custom Apollo Engine deployment","hidden":true},"frontend":{"name":"frontend","type":"option","description":"URL for a custom Apollo Engine frontend","hidden":true},"clientReferenceId":{"name":"clientReferenceId","type":"option","description":"Reference id for the client which will match ids from client traces, will use clientName if not provided"},"clientName":{"name":"clientName","type":"option","description":"Name of the client that the queries will be attached to"},"clientVersion":{"name":"clientVersion","type":"option","description":"The version of the client that the queries will be attached to"},"tag":{"name":"tag","type":"option","char":"t","description":"The published service tag for this client"},"queries":{"name":"queries","type":"option","description":"Deprecated in favor of the includes flag"},"includes":{"name":"includes","type":"option","description":"Glob of files to search for GraphQL operations. This should be used to find queries *and* any client schema extensions"},"excludes":{"name":"excludes","type":"option","description":"Glob of files to exclude for GraphQL operations. Caveat: this doesn't currently work in watch mode"},"tagName":{"name":"tagName","type":"option","description":"Name of the template literal tag used to identify template literals containing GraphQL queries in Javascript/Typescript code"},"watch":{"name":"watch","type":"boolean","description":"Watch for file changes and reload codegen","allowNo":false},"target":{"name":"target","type":"option","description":"Type of code generator to use (swift | typescript | flow | scala)","required":true},"localSchemaFile":{"name":"localSchemaFile","type":"option","description":"Path to your local GraphQL schema file (introspection result or SDL)"},"addTypename":{"name":"addTypename","type":"boolean","description":"[default: true] Automatically add __typename to your queries, can be unset with --no-addTypename","allowNo":true},"passthroughCustomScalars":{"name":"passthroughCustomScalars","type":"boolean","description":"Use your own types for custom scalars","allowNo":false},"customScalarsPrefix":{"name":"customScalarsPrefix","type":"option","description":"Include a prefix when using provided types for custom scalars"},"mergeInFieldsFromFragmentSpreads":{"name":"mergeInFieldsFromFragmentSpreads","type":"boolean","description":"Merge fragment fields onto its enclosing type","allowNo":false},"namespace":{"name":"namespace","type":"option","description":"The namespace to emit generated code into."},"operationIdsPath":{"name":"operationIdsPath","type":"option","description":"Path to an operation id JSON map file. If specified, also stores the operation ids (hashes) as properties on operation types [currently Swift-only]"},"only":{"name":"only","type":"option","description":"Parse all input files, but only output generated code for the specified file [Swift only]"},"useFlowExactObjects":{"name":"useFlowExactObjects","type":"boolean","description":"Use Flow exact objects for generated types [flow only]","allowNo":false},"useFlowReadOnlyTypes":{"name":"useFlowReadOnlyTypes","type":"boolean","description":"Use read only types for generated types [flow only]. **Deprecated in favor of `useReadOnlyTypes`.**","allowNo":false},"useReadOnlyTypes":{"name":"useReadOnlyTypes","type":"boolean","description":"Use read only types for generated types [flow | typescript]","allowNo":false},"outputFlat":{"name":"outputFlat","type":"boolean","description":"By default, TypeScript/Flow will put each generated file in a directory next to its source file using the value of the \"output\" as the directory name. Set \"outputFlat\" to put all generated files in the directory relative to the current working directory defined by \"output\".","allowNo":false},"globalTypesFile":{"name":"globalTypesFile","type":"option","description":"By default, TypeScript will put a file named \"globalTypes.ts\" inside the \"output\" directory. Set \"globalTypesFile\" to specify a different path. Alternatively, set \"fileExtension\" to modify the extension of the file, for example \"d.ts\" will output \"globalTypes.d.ts\""},"tsFileExtension":{"name":"tsFileExtension","type":"option","description":"By default, TypeScript will output \"ts\" files. Set \"tsFileExtension\" to specify a different file extension, for example \"d.ts\""}},"args":[{"name":"output","description":"Directory to which generated files will be written.\n- For TypeScript/Flow generators, this specifies a directory relative to each source file by default.\n- For TypeScript/Flow generators with the \"outputFlat\" flag is set, and for the Swift generator, this specifies a file or directory (absolute or relative to the current working directory) to which:\n  - a file will be written for each query (if \"output\" is a directory)\n  - all generated types will be written\n- For all other types, this defines a file (absolute or relative to the current working directory) to which all generated types are written."}]},"client:download-schema":{"id":"client:download-schema","description":"Download a schema from engine or a GraphQL endpoint.","pluginName":"apollo","pluginType":"core","aliases":[],"flags":{"config":{"name":"config","type":"option","char":"c","description":"Path to your Apollo config file"},"header":{"name":"header","type":"option","description":"Additional header to send to server for introspectionQuery. May be used multiple times to add multiple headers. NOTE: The `--endpoint` flag is REQUIRED if using the `--header` flag."},"endpoint":{"name":"endpoint","type":"option","description":"The url of your service"},"key":{"name":"key","type":"option","description":"The API key for the Apollo Engine service"},"engine":{"name":"engine","type":"option","description":"Reporting URL for a custom Apollo Engine deployment","hidden":true},"frontend":{"name":"frontend","type":"option","description":"URL for a custom Apollo Engine frontend","hidden":true},"clientReferenceId":{"name":"clientReferenceId","type":"option","description":"Reference id for the client which will match ids from client traces, will use clientName if not provided"},"clientName":{"name":"clientName","type":"option","description":"Name of the client that the queries will be attached to"},"clientVersion":{"name":"clientVersion","type":"option","description":"The version of the client that the queries will be attached to"},"tag":{"name":"tag","type":"option","char":"t","description":"The published service tag for this client"},"queries":{"name":"queries","type":"option","description":"Deprecated in favor of the includes flag"},"includes":{"name":"includes","type":"option","description":"Glob of files to search for GraphQL operations. This should be used to find queries *and* any client schema extensions"},"excludes":{"name":"excludes","type":"option","description":"Glob of files to exclude for GraphQL operations. Caveat: this doesn't currently work in watch mode"},"tagName":{"name":"tagName","type":"option","description":"Name of the template literal tag used to identify template literals containing GraphQL queries in Javascript/Typescript code"}},"args":[{"name":"output","description":"Path to write the introspection result to","required":true,"default":"schema.json"}]},"client:extract":{"id":"client:extract","description":"Extract queries from a client","pluginName":"apollo","pluginType":"core","aliases":[],"flags":{"config":{"name":"config","type":"option","char":"c","description":"Path to your Apollo config file"},"header":{"name":"header","type":"option","description":"Additional header to send to server for introspectionQuery. May be used multiple times to add multiple headers. NOTE: The `--endpoint` flag is REQUIRED if using the `--header` flag."},"endpoint":{"name":"endpoint","type":"option","description":"The url of your service"},"key":{"name":"key","type":"option","description":"The API key for the Apollo Engine service"},"engine":{"name":"engine","type":"option","description":"Reporting URL for a custom Apollo Engine deployment","hidden":true},"frontend":{"name":"frontend","type":"option","description":"URL for a custom Apollo Engine frontend","hidden":true},"clientReferenceId":{"name":"clientReferenceId","type":"option","description":"Reference id for the client which will match ids from client traces, will use clientName if not provided"},"clientName":{"name":"clientName","type":"option","description":"Name of the client that the queries will be attached to"},"clientVersion":{"name":"clientVersion","type":"option","description":"The version of the client that the queries will be attached to"},"tag":{"name":"tag","type":"option","char":"t","description":"The published service tag for this client"},"queries":{"name":"queries","type":"option","description":"Deprecated in favor of the includes flag"},"includes":{"name":"includes","type":"option","description":"Glob of files to search for GraphQL operations. This should be used to find queries *and* any client schema extensions"},"excludes":{"name":"excludes","type":"option","description":"Glob of files to exclude for GraphQL operations. Caveat: this doesn't currently work in watch mode"},"tagName":{"name":"tagName","type":"option","description":"Name of the template literal tag used to identify template literals containing GraphQL queries in Javascript/Typescript code"}},"args":[{"name":"output","description":"Path to write the extracted queries to","required":true,"default":"manifest.json"}]},"client:push":{"id":"client:push","description":"Register operations with Apollo, adding them to the safelist","pluginName":"apollo","pluginType":"core","aliases":[],"flags":{"config":{"name":"config","type":"option","char":"c","description":"Path to your Apollo config file"},"header":{"name":"header","type":"option","description":"Additional header to send to server for introspectionQuery. May be used multiple times to add multiple headers. NOTE: The `--endpoint` flag is REQUIRED if using the `--header` flag."},"endpoint":{"name":"endpoint","type":"option","description":"The url of your service"},"key":{"name":"key","type":"option","description":"The API key for the Apollo Engine service"},"engine":{"name":"engine","type":"option","description":"Reporting URL for a custom Apollo Engine deployment","hidden":true},"frontend":{"name":"frontend","type":"option","description":"URL for a custom Apollo Engine frontend","hidden":true},"clientReferenceId":{"name":"clientReferenceId","type":"option","description":"Reference id for the client which will match ids from client traces, will use clientName if not provided"},"clientName":{"name":"clientName","type":"option","description":"Name of the client that the queries will be attached to"},"clientVersion":{"name":"clientVersion","type":"option","description":"The version of the client that the queries will be attached to"},"tag":{"name":"tag","type":"option","char":"t","description":"The published service tag for this client"},"queries":{"name":"queries","type":"option","description":"Deprecated in favor of the includes flag"},"includes":{"name":"includes","type":"option","description":"Glob of files to search for GraphQL operations. This should be used to find queries *and* any client schema extensions"},"excludes":{"name":"excludes","type":"option","description":"Glob of files to exclude for GraphQL operations. Caveat: this doesn't currently work in watch mode"},"tagName":{"name":"tagName","type":"option","description":"Name of the template literal tag used to identify template literals containing GraphQL queries in Javascript/Typescript code"}},"args":[]},"service:check":{"id":"service:check","description":"Check a service against known operation workloads to find breaking changes","pluginName":"apollo","pluginType":"core","aliases":["schema:check"],"flags":{"config":{"name":"config","type":"option","char":"c","description":"Path to your Apollo config file"},"header":{"name":"header","type":"option","description":"Additional header to send to server for introspectionQuery. May be used multiple times to add multiple headers. NOTE: The `--endpoint` flag is REQUIRED if using the `--header` flag."},"endpoint":{"name":"endpoint","type":"option","description":"The url of your service"},"key":{"name":"key","type":"option","description":"The API key for the Apollo Engine service"},"engine":{"name":"engine","type":"option","description":"Reporting URL for a custom Apollo Engine deployment","hidden":true},"frontend":{"name":"frontend","type":"option","description":"URL for a custom Apollo Engine frontend","hidden":true},"tag":{"name":"tag","type":"option","char":"t","description":"The published tag to check this service against"},"validationPeriod":{"name":"validationPeriod","type":"option","description":"The size of the time window with which to validate the schema against. You may provide a number (in seconds), or an ISO8601 format duration for more granularity (see: https://en.wikipedia.org/wiki/ISO_8601#Durations)"},"queryCountThreshold":{"name":"queryCountThreshold","type":"option","description":"Minimum number of requests within the requested time window for a query to be considered."},"queryCountThresholdPercentage":{"name":"queryCountThresholdPercentage","type":"option","description":"Number of requests within the requested time window for a query to be considered, relative to total request count. Expected values are between 0 and 0.05 (minimum 5% of total request volume)"},"json":{"name":"json","type":"boolean","description":"Output result in json, which can then be parsed by CLI tools such as jq.","allowNo":false},"localSchemaFile":{"name":"localSchemaFile","type":"option","description":"Path to your local GraphQL schema file (introspection result or SDL)"},"markdown":{"name":"markdown","type":"boolean","description":"Output result in markdown.","allowNo":false},"serviceName":{"name":"serviceName","type":"option","description":"Provides the name of the implementing service for a federated graph. This flag will indicate that the schema is a partial schema from a federated service"}},"args":[]},"service:delete":{"id":"service:delete","description":"Delete a federated service from Engine and recompose remaining services","pluginName":"apollo","pluginType":"core","aliases":[],"flags":{"config":{"name":"config","type":"option","char":"c","description":"Path to your Apollo config file"},"header":{"name":"header","type":"option","description":"Additional header to send to server for introspectionQuery. May be used multiple times to add multiple headers. NOTE: The `--endpoint` flag is REQUIRED if using the `--header` flag."},"endpoint":{"name":"endpoint","type":"option","description":"The url of your service"},"key":{"name":"key","type":"option","description":"The API key for the Apollo Engine service"},"engine":{"name":"engine","type":"option","description":"Reporting URL for a custom Apollo Engine deployment","hidden":true},"frontend":{"name":"frontend","type":"option","description":"URL for a custom Apollo Engine frontend","hidden":true},"tag":{"name":"tag","type":"option","char":"t","description":"The variant of the service to delete"},"federated":{"name":"federated","type":"boolean","char":"f","description":"[Deprecated: use --serviceName to indicate federation] Indicates that the schema is a partial schema from a federated service","hidden":true,"allowNo":false},"serviceName":{"name":"serviceName","type":"option","description":"Provides the name of the implementing service for a federated graph","required":true}},"args":[]},"service:download":{"id":"service:download","description":"Download the schema from your GraphQL endpoint.","pluginName":"apollo","pluginType":"core","aliases":["schema:download"],"flags":{"config":{"name":"config","type":"option","char":"c","description":"Path to your Apollo config file"},"header":{"name":"header","type":"option","description":"Additional header to send to server for introspectionQuery. May be used multiple times to add multiple headers. NOTE: The `--endpoint` flag is REQUIRED if using the `--header` flag."},"endpoint":{"name":"endpoint","type":"option","description":"The url of your service"},"key":{"name":"key","type":"option","description":"The API key for the Apollo Engine service"},"engine":{"name":"engine","type":"option","description":"Reporting URL for a custom Apollo Engine deployment","hidden":true},"frontend":{"name":"frontend","type":"option","description":"URL for a custom Apollo Engine frontend","hidden":true},"tag":{"name":"tag","type":"option","char":"t","description":"The published tag to check this service against","default":"current"},"skipSSLValidation":{"name":"skipSSLValidation","type":"boolean","char":"k","description":"Allow connections to an SSL site without certs","allowNo":false}},"args":[{"name":"output","description":"Path to write the introspection result to","required":true,"default":"schema.json"}]},"service:list":{"id":"service:list","description":"List the services in a graph","pluginName":"apollo","pluginType":"core","aliases":[],"flags":{"config":{"name":"config","type":"option","char":"c","description":"Path to your Apollo config file"},"header":{"name":"header","type":"option","description":"Additional header to send to server for introspectionQuery. May be used multiple times to add multiple headers. NOTE: The `--endpoint` flag is REQUIRED if using the `--header` flag."},"endpoint":{"name":"endpoint","type":"option","description":"The url of your service"},"key":{"name":"key","type":"option","description":"The API key for the Apollo Engine service"},"engine":{"name":"engine","type":"option","description":"Reporting URL for a custom Apollo Engine deployment","hidden":true},"frontend":{"name":"frontend","type":"option","description":"URL for a custom Apollo Engine frontend","hidden":true},"tag":{"name":"tag","type":"option","char":"t","description":"The published tag to list the services from"}},"args":[]},"service:push":{"id":"service:push","description":"Push a service to Engine","pluginName":"apollo","pluginType":"core","aliases":["schema:publish"],"flags":{"config":{"name":"config","type":"option","char":"c","description":"Path to your Apollo config file"},"header":{"name":"header","type":"option","description":"Additional header to send to server for introspectionQuery. May be used multiple times to add multiple headers. NOTE: The `--endpoint` flag is REQUIRED if using the `--header` flag."},"endpoint":{"name":"endpoint","type":"option","description":"The url of your service"},"key":{"name":"key","type":"option","description":"The API key for the Apollo Engine service"},"engine":{"name":"engine","type":"option","description":"Reporting URL for a custom Apollo Engine deployment","hidden":true},"frontend":{"name":"frontend","type":"option","description":"URL for a custom Apollo Engine frontend","hidden":true},"tag":{"name":"tag","type":"option","char":"t","description":"The tag to publish this service to","default":"current"},"localSchemaFile":{"name":"localSchemaFile","type":"option","description":"Path to your local GraphQL schema file (introspection result or SDL)"},"federated":{"name":"federated","type":"boolean","char":"f","description":"[Deprecated: use --serviceName to indicate federation] Indicates that the schema is a partial schema from a federated service","hidden":true,"allowNo":false},"serviceName":{"name":"serviceName","type":"option","description":"Provides the name of the implementing service for a federated graph"},"serviceURL":{"name":"serviceURL","type":"option","description":"Provides the url to the location of the implementing service for a federated graph"},"serviceRevision":{"name":"serviceRevision","type":"option","description":"Provides a unique revision identifier for a change to an implementing service on a federated service push. The default of this is a git sha"}},"args":[]}}}